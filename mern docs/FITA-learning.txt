Common notes:
node -v (get node version)
npm -v (get npm version)
For installing a new react app with global:
npm install -g create-react-app
--go to corresponding folder--
mkdir react
cd react
create-react-app project_name

    Installation process of node:
    fetch, load, extract and finalize

    Github:
    create new repository
    repositoryname.github.io
    Terminal -> go to folder -> npm run build

C:\Users\manik\mysite\manikandanthangam.github.io>git clone https://github.com/manikandanthangam/manikandanthangam.github.io.git
C:\Users\manik\mysite\manikandanthangam.github.io>git add . 
C:\Users\manik\mysite\manikandanthangam.github.io>cd manikandanthangam.github.io 
C:\Users\manik\mysite\manikandanthangam.github.io>git add . 
C:\Users\manik\mysite\manikandanthangam.github.io>git commit -m "Initial deployment" 
C:\Users\manik\mysite\manikandanthangam.github.io>git push 

Rourter basic ref: https://blog.pshrmn.com/simple-react-router-v4-tutorial/


For checking mongodb via command promt:
C:\Program Files\MongoDB\Server\4.2\bin>mongo
show dbs 
use database_name
db.table_name.find()
db.table_name.find().pretty()
db.tbl_dummy.insertOne({"name":"dummy entry 1"})

======================================

Softwares:
++++++++++++++++++++++++++++++++++
Nov 30, 2019:
Node - https://nodejs.org/en/
React:
npm install -g create-react-app
create-react-app <projectname>
ref link: https://makandracards.com/reactjs-quick/52419-install-reactjs-windows
Mongodb - https://www.mongodb.com/download-center/enterprise
Visual studio - https://code.visualstudio.com/
Github - https://github.com/

node -> event based (php thread based -> max thread based on server -> core i5 8th gen -> 8 threads)
react -> single page application
mongo -> non relational (json format) (relational example -> mysql)
=============================

Server:
+++++++++++++++++++++++++++++++++++
Dec 07, 2019:
1. package.json
2. dependency and devdependency
Installing node module(nodemon)
For global: npm install -g nodemon
For dev: npm install --save-dev nodemon
3. semantic versioning
Ex: 12.13.1
Here, 12-> broke change, 13-> functionality/feature changes, 1-> bug / issues fixes
4. app.js -> routes flow
Ex url: http://localhost:3001/student
Flow -> (app.js -> app.use -> router var config) -> (router/student.js) -> based on calling method(get/post) render output will be given as response.
5. Rest Api in server:
    Get
    post
6. CORS

Tasks:
1. signup html
2. login html
3. reset password html
4. deactivate account html
----------

Doubts:
1. How to manage multiple node/react projects on a same server and how they will get started
2. Node: Whether we should use "serve" -> scripts for configuring the additional modules like nodemon or we can use any other name. If we should use serve then how we configure another module.
3. What is the use of private in packages.json
4. Configuring new git doubts(how to remove subdirectory git and make the parent folder as git master, enable/disable git)
5. first coming to app.js or index.js
---------

Dec 08, 2019:
1. Bootstrap
2. Box model, box shadow and font awesome icons
3. React new page configuration
4. Diff b/w normal click and Arrow function click event 

Tasks:
1. Signup react page design
2. Login react page design
==============================
Dec 14, 2019:

For installing bootstrap:
PS C:\Users\manik\mern\sample> npm install bootstrap --save

1. Included bootstrap from internal node module
2. Installed react-router-dom, react-router modules
3. Included BrowserRouter from react-router-dom
4. Created Header and Main components
5. Included Router from react-router-dom
6. Route tag used to where it need to be displayed
7. Link tag used to link the redirection
8. Created two dummy components
9. Passed attribute value from parent dummy component to child dummy1 component
10. Constructor and super functions
11. Different type of issues in constructor and super configuration

Tasks:
1. CSS Transition
2. CSS Transformation

For creating a new project:
create-react-app 

For checking mongodb via command promt:
C:\Program Files\MongoDB\Server\4.2\bin>mongo

Required items for every class:
1. React -> Run
2. Node -> Run
3. MongoDB -> Run
4. Postman -> config each collections with corresponding method

Doubts:
1. Why we didn't used parent div element on main(switch) and header(header) file
- we can use any html tas as a parent like header
2. Whether Swith is like navigation scripts?
- Yes, it's like switch case concept, only one case will be executed at a time, if nothing mathched then it will execute default.
3. We should include Header and Main order or we can use any order.
- page content served through main file so it should be below header.
=================================================
Dec 16, 2019:

html, css basics
document, window, 
Browser objects:
we can access browser objects by using any client side language
localStorage, sessionStorage
localStorage -> will get cleared when user clear cache
sessionStorage -> will get cleared when close the browser
web SQL -> indexedDb (for managing and syncing offline data)
cookies -> handled on server side
service workers -> used for push notification

ECMASCRIPT -> https://en.wikipedia.org/wiki/ECMAScript
It is the browser standard for javascript and all the browsers should meet the ECMASCRIPT standard
ES6:
Breaking change
before ES6 -> functional oriented programming (EX: C)
OOPS has inclueded in ES6

For supporting ES6 compilers are used to convert the browser(ES6) understanding language.
Sample compilers:
React -> Babel
Angular -> Typescript

ES6 launched on 2015

Server jobs:
Data transmission
Authentication
Autorization

---------
CSS Types:
CSS
SCSS
SASS
LESS
SCSS, SCSS, SASS, LESS are pre procesers
we can use it as a variable and use it on style. It cannot used on CSS.
most used one is SASS (Youssouf)

Task:
Create table design with sample data(https://jsonplaceholder.typicode.com/comments)

================================
Dec 21, 2019:

React charts 2:
Ref: https://jerairrest.github.io/react-chartjs-2/
npm install --save react-chartjs-2 chart.js
---------
Dec 22, 2019

core components
Dynamic table display using core components concept

Task:
Design a dashboard with left side content(3) and right side different charts(9)

=======================================
Dec 28, 2019:
Mongoose module:
Ref: https://mongoosejs.com/docs/
npm install mongoose --save

Task:
1. complete the table list data pending item
2. create employee model as like user model

========================================
Dec 29, 2019:
React: State

Node: connection between model, controller

Common: connection between mongodb, node and react with react get method.
axios is used to hit api call in react and it's like router on node.

Axios:
Ref: https://www.npmjs.com/package/axios
npm install axios --save

Tasks:
1. React - Form - comments (for next class)
2. React - Employee list (for practicing todays items)
3. React - Comments list page design (for future class)

Doubts:
1. function (arg) and (arg) => () are same or different
For ES6 we need to use arrow function in order to use this keyword. If this keyword not used then we can use any function type.
2. I have given employee table name as "Employee" in the model but how it connected with Employees table.
It's adding plural(i.e "s") for those words (Ex: user, employee). It might be caused by used extension "mangoose" not mongodb.
3. react build doubt
It was cache issue
4. Warning: Each child in a list should have a unique "key" prop.

=========================================
Jan 04, 2019:
Pagination related items
image path setup in react - In react we standardly manage the images under public folder so that browser can access after taking build.

Tasks:
1. List with card design
2. View card design



==========================================
Jan 05, 2019:

1. GET and DELETE requests on server
2. connect get and delete requests on react done with console log

Notes:
For GET and DELETE we can only pass data on querystring and read it through params on server
For post method we can pass data as json and read it through body on server

Tasks: 
1. Sweet Alert - check design samples
2. Edit, Delete for comments (react)
3. edit, delete for comments (server)

============================================






































